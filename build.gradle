plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'dev.appkr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // BOOTSTRAP, BOM
    implementation platform('org.springframework.cloud:spring-cloud-dependencies:2020.0.3')

    // GLOBAL UTILITIES
    implementation 'org.apache.commons:commons-lang3:3.10'

    // PERSISTENCE
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'com.h2database:h2'

    // SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // WEB MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // DEVELOPMENT TOOLS
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // spring configuration processor
    annotationProcessor('org.springframework.boot:spring-boot-configuration-processor')

    // OPS
    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // logback extension
    implementation 'net.logstash.logback:logstash-logback-encoder:6.5'
    implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
}

test {
    useJUnitPlatform()
}

if (!org.gradle.internal.os.OperatingSystem.current().isWindows()) {
    processResources {
        filesMatching(["**/application.yml"]) {
            filter {
                it.replace("#project.version#", version)
            }
        }
    }
}